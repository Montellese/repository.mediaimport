<?xml version='1.0' encoding='UTF-8'?>
<addons><addon id="repository.mediaimport" name="Media Import Repository" version="0.0.4" provider-name="Montellese">
	<extension point="xbmc.addon.repository" name="Media Import Repository">
		<info compressed="false">https://raw.github.com/Montellese/repository.mediaimport/master/addons.xml</info>
		<checksum>https://raw.github.com/Montellese/repository.mediaimport/master/addons.xml.md5</checksum>
		<datadir zip="true">https://raw.github.com/Montellese/repository.mediaimport/master/downloads/</datadir>
	</extension>
	<extension point="xbmc.addon.metadata">
		<summary lang="en_GB">Media Import Repository</summary>
		<description lang="en_GB">Kodi media importer and additional add-ons.</description>
		<disclaimer lang="en_GB" />
		<platform>all</platform>
		<license>GPL-2.0-or-later</license>
		<source>https://github.com/Montellese/repository.mediaimport/</source>
		<website>https://github.com/Montellese/</website>
		<email>montellese@kodi.tv</email>
	</extension>
</addon><addon id="mediaimporter.emby" name="Emby Media Importer" version="0.0.9" provider-name="Montellese">
    <requires>
        <import addon="xbmc.python" version="3.0.0" />
        <import addon="script.module.dateutil" />
        <import addon="script.module.requests" />
        <import addon="script.module.six" />
        
        <import addon="script.module.websocket_client" version="0.57.0" />
        <import addon="script.module.semantic_version" version="2.8.4" />
    </requires>
    <extension point="kodi.mediaimporter" discovery="discovery.py" library="importer.py" observer="observer.py">
        <canlookupprovider protocol="Emby">true</canlookupprovider>
        <providersettings>providersettings.xml</providersettings>
        <importsettings>importsettings.xml</importsettings>
    </extension>
    <extension point="kodi.context.item">
        <menu id="kodi.core.main">
            <menu>
                <label>Emby Media Importer</label>
                <item library="context.py" args="?action=sync">
                    <label>32103</label>
                    <visible>ListItem.IsImported + ListItem.IsEnabled + String.IsEqual(ListItem.MediaImporter,mediaimporter.emby)</visible>
                </item>
                <item library="context.py" args="?action=play">
                    <label>32100</label>
                    <visible>!ListItem.IsFolder + ListItem.IsImported + ListItem.IsEnabled + String.IsEqual(ListItem.MediaImporter,mediaimporter.emby)</visible>
                </item>
                <item library="context.py" args="?action=refresh">
                    <label>32104</label>
                    <visible>ListItem.IsImported + ListItem.IsEnabled + String.IsEqual(ListItem.MediaImporter,mediaimporter.emby)</visible>
                </item>
            </menu>
        </menu>
    </extension>
    <extension point="xbmc.addon.metadata">
        <summary lang="en_GB">Import and play media items from an Emby Media Server or Jellyfin</summary>
        <description lang="en_GB">Emby Media Importer allows you to import and play media libraries, for movies, tv shows and music videos, from Emby Media Server or Jellyfin. Thus using Emby / Jellyfin as a metadata manager (server) and Kodi as player (client). In addition playback data can be synced across multiple clients, for each user on Emby / Jellyfin.</description>
        <disclaimer lang="en_GB" />
        <platform>all</platform>
        <license>GPL-2.0-or-later</license>
        <forum />
        <website>http://kodi.tv</website>
        <email>montellese@kodi.tv</email>
        <source>https://github.com/Montellese/mediaimporter.emby</source>
    </extension>
</addon><addon id="mediaimporter.plex" name="Plex Media Importer" version="0.0.7" provider-name="Montellese">
    <requires>
        <import addon="xbmc.python" version="3.0.0" />
        <import addon="script.module.websocket_client" version="0.57.0" />
        <import addon="script.module.requests" />
        <import addon="script.module.six" />
        <import addon="script.module.dateutil" />
        
    </requires>
    <extension point="kodi.mediaimporter" discovery="discovery.py" library="importer.py" observer="observer.py">
        <canlookupprovider protocol="Plex">true</canlookupprovider>
        <providersettings>providersettings.xml</providersettings>
        <importsettings>importsettings.xml</importsettings>
    </extension>
    <extension point="xbmc.addon.metadata">
        <summary lang="en_GB">Import and play media items from a Plex Media Server (PMS)</summary>
        <description lang="en_GB">Plex Media Importer allows you to import and play media libraries, for movies, tv shows and music videos, from Plex Media Server (PMS). Thus using Plex as a metadata manager (server) and Kodi as player (client). In addition playback data can be synced across multiple clients, for each user on Plex.</description>
        <disclaimer lang="en_GB" />
        <platform>all</platform>
        <license>GPL-2.0-or-later</license>
        <forum />
        <website>http://kodi.tv</website>
        <email>montellese@kodi.tv</email>
        <source>https://github.com/Montellese/mediaimporter.plex</source>
    </extension>
</addon><addon id="script.module.websocket_client" name="websocket_client" version="0.57.1" provider-name="liris">
  <requires>
    <import addon="xbmc.python" version="3.0.0" />
    <import addon="script.module.six" />
  </requires>
  <extension point="xbmc.python.module" library="lib" />
  <extension point="xbmc.addon.metadata">
    <summary lang="en_GB">Websocket client for Python</summary>
    <description lang="en_GB">websocket-client module is WebSocket client for python. This provide the low level APIs for WebSocket. All APIs are the synchronous functions.</description>
    <platform>all</platform>
    <license>BSD</license>
    <website>https://pypi.org/project/websocket_client/</website>
    <source>https://github.com/websocket-client/websocket-client</source>
    <email>liris.pp AT gmail.com</email>
    <assets>
      <icon>resources/icon.png</icon>
    </assets>
  </extension>
</addon><addon id="script.module.semantic_version" name="python-semanticversion" version="2.8.4" provider-name="RaphaÃ«l Barrois">
  <requires>
    <import addon="xbmc.python" version="3.0.0" />
  </requires>
  <extension point="xbmc.python.module" library="lib" />
  <extension point="xbmc.addon.metadata">
    <summary lang="en_GB">Tool to handle SemVer in Python</summary>
    <description lang="en_GB">The semantic_version module provides a few tools to handle SemVer in Python. It follows strictly the 2.0.0 version of the SemVer scheme.</description>
    <license>BSD-2-Clause</license>
    <website>https://python-semanticversion.readthedocs.io/en/stable/</website>
    <source>https://github.com/rbarrois/python-semanticversion</source>
    <assets>
      <icon>icon.png</icon>
    </assets>
  </extension>
</addon></addons>